.env content
# Description: Environment variables for establishing connection to Postgres database
POSTGRES = "Postgres"
POSTGRES_HOST = ""
POSTGRES_PORT = ""
POSTGRES_USER = ""
POSTGRES_PASSWORD = ""
# Postgres database names
SENTINEL_DB_NAME = ""
USER_DB_NAME = ""

notes
Przyszła rozbudowa:
from werkzeug.serving import make_server

class ServerThread(threading.Thread):

    def __init__(self, app):
        threading.Thread.__init__(self)
        self.server = make_server('127.0.0.1', 5000, app)
        self.ctx = app.app_context()
        self.ctx.push()

    def run(self):
        log.info('starting server')
        self.server.serve_forever()

    def shutdown(self):
        self.server.shutdown()

def start_server():
    global server
    app = flask.Flask('myapp')
    # App routes defined here
    server = ServerThread(app)
    server.start()
    log.info('server started')

def stop_server():
    global server
    server.shutdown()
Source: https://stackoverflow.com/questions/15562446/how-to-stop-flask-application-without-using-ctrl-c
zmiana default portów
interaktywne okno do łączenia z bazą
scrypt, który łaczy się domyślnym hasłem, i je zmienia - przygotowuje strukture
Logi:
w influxie i dokumencie, 
built-in logger source: https://flask.palletsprojects.com/en/3.0.x/quickstart/#deploying-to-a-web-server
log kiedy serwer wstał, czy połączono z bazą, czy serwer działa prawidłowo 
Log kto i kiedy utworzył/modyfikował/usunął usługe

Customize Messages for logger
